VPATH	+= $(STARTUP_DIR)
VPATH	+= $(TEST_DIR)

IFLAGS	:= -I$(STARTUP_DIR)
IFLAGS	+= -I$(ENV_DIR)
IFLAGS	+= -I$(ENV_ARCH_DIR)
IFLAGS	+= -I$(TEST_DIR)
IFLAGS	+= -I$(TEMPLATE_DIR)

CC		:= arm-none-eabi-gcc
LINK	:= arm-none-eabi-gcc

OBJS	:= start.o
OBJS	+= main.o
OBJS	+= $(TEST_OBJS)

CFLAGS	:= -O0
CFLAGS	+= -gdwarf-2 
#CFLAGS  += -Wall -Wno-unused-label -Wpointer-arith    -fleading-underscore
CFLAGS  += -Wall -Wno-unused-label -Wpointer-arith   
CFLAGS  += -mcpu=cortex-a9 -marm   
CFLAGS  += -mno-thumb-interwork   
CFLAGS  += -marm -march=armv7-a  
CFLAGS  += -mfpu=neon -mfloat-abi=hard 


LDSCRIPT = $(STARTUP_DIR)/arm.ld
LDFLAGS	:=  -mcpu=cortex-a9 -marm
LDFLAGS	+= -mno-thumb-interwork 
LDFLAGS	+= -marm -march=armv7-a 
LDFLAGS	+= -mfpu=neon -mfloat-abi=hard 
LDFLAGS	+= -mno-unaligned-access   -fleading-underscore
LDFLAGS	+= -Wl,--gc-sections 
LDFLAGS	+= -nostartfiles 
#LDFLAGS	+= --specs=nano.specs 
LDFLAGS	+= -u _printf_float 
LDFLAGS	+= -u _scanf_float -Wl,-Map=test.map,--cref 
LDFLAGS	+= -N -mcpu=cortex-a9
LDFLAGS += -nostdlib 
#LDFLAGS += -L/usr/lib/gcc/arm-none-eabi/4.9.3/fpu/
#LDFLAGS += -L/usr/lib/arm-none-eabi/newlib/fpu/

LDFLAGS :=   -mcpu=cortex-a9 -marm -mno-thumb-interwork 
LDFLAGS += -marm -march=armv7-a -mfpu=vfp3 -mfloat-abi=hard -mno-unaligned-access  
LDFLAGS += -L/usr/lib/gcc/arm-none-eabi/4.9.3/fpu -L/usr/lib/arm-none-eabi/newlib/fpu 
LDFLAGS += -Wl,--gc-sections -nostartfiles  -u _printf_float -u _scanf_float 
LDFLAGS += -Wl,-Map=GR-PEACH_mbed.map,--cref -mlittle-endian 
LDFLAGS += -nostartfiles
#LDFLAGS += --specs=nano.specs 
#LDFLAGS += -e start 
LDFLAGS += -L /usr/lib/arm-none-eabi/newlib/fpu/ -N -mcpu=cortex-a9  -L. 
LDFLAGS += -lm -lc -lgcc -lnosys
LDFLAGS += -T $(LDSCRIPT)


LIBS := 


%.o: %.S
	$(CC) -c $(IFLAGS) $(CFLAGS) $<

%.o: %.c
	$(CC) -c $(IFLAGS) $(CFLAGS) $<

all: $(OBJS)
	$(LINK) $(CFLAGS) $(LDFLAGS) -o $(TARGET_TEST_PG) $(OBJS) -lc -lgcc -lnosys -Wl,-Map,$(TARGET_TEST_PG).map $(LIBS)
	arm-none-eabi-objdump -d $(TARGET_TEST_PG) > $(TARGET_TEST_PG).dump

clean:
	rm -f $(OBJS) $(TARGET_TEST_PG) *.map *.dump
